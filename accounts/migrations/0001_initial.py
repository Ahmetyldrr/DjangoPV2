# Generated by Django 5.2.5 on 2025-08-22 23:48

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-posta')),
                ('user_type', models.CharField(choices=[('client', 'Müşteri'), ('freelancer', 'Freelancer'), ('admin', 'Admin')], default='client', max_length=20, verbose_name='Kullanıcı Tipi')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, verbose_name='Hakkında')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Doğrulanmış')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kayıt Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Ünvan')),
                ('skills', models.TextField(verbose_name='Yetenekler (virgülle ayırın)')),
                ('experience_years', models.IntegerField(default=0, verbose_name='Deneyim (yıl)')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Saatlik Ücret (TL)')),
                ('city', models.CharField(max_length=100, verbose_name='Şehir')),
                ('country', models.CharField(default='Türkiye', max_length=100, verbose_name='Ülke')),
                ('portfolio_url', models.URLField(blank=True, verbose_name='Portfolio URL')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn URL')),
                ('is_available', models.BooleanField(default=True, verbose_name='Müsait')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Doğrulanmış')),
                ('total_projects', models.IntegerField(default=0, verbose_name='Toplam Proje')),
                ('total_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Kazanç')),
                ('rating', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=3, verbose_name='Puan')),
                ('rating_count', models.IntegerField(default=0, verbose_name='Puan Sayısı')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Freelancer Profili',
                'verbose_name_plural': 'Freelancer Profilleri',
                'ordering': ['-rating', '-total_projects'],
            },
        ),
    ]
